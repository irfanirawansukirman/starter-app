plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

//tasks.withType(Test) {
//    jacoco.includeNoLocationClasses = true
//    jacoco.excludes = ['jdk.internal.*'] // see related issue https://github.com/gradle/gradle/issues/5184#issuecomment-457865951
//}
//
//tasks.withType(Test) { jacoco.includeNoLocationClasses = true }
//
//project.afterEvaluate {
//
//    (android.hasProperty('applicationVariants')
//            ? android.'applicationVariants'
//            : android.'libraryVariants').all { variant ->
//        def variantName = variant.name
//        def unitTestTask = "test${variantName.capitalize()}UnitTest"
//        def uiTestCoverageTask = "create${variantName.capitalize()}CoverageReport"
//
//        tasks.create(name: "${unitTestTask}Coverage", type: JacocoReport, dependsOn: [
//                "$unitTestTask",
//                "$uiTestCoverageTask"
//        ]) {
//            group = "Reporting"
//            description = "Generate Jacoco coverage reports for the ${variantName.capitalize()} build"
//
//            reports {
//                html.enabled = true
//                xml.enabled = true
//                csv.enabled = false
//            }
//
//            def fileFilter = [
//                    '**/R.class',
//                    '**/R$*.class',
//                    '**/BuildConfig.*',
//                    '**/Manifest*.*',
//                    '**/*Test*.*',
//                    '**/com/example/databinding/*',
//                    '**/com/example/generated/callback/*',
//                    '**/android/databinding/*',
//                    '**/androidx/databinding/*',
//                    '**/di/module/*',
//                    '**/*MapperImpl*.*',
//                    '**/*$ViewInjector*.*',
//                    '**/*$ViewBinder*.*',
//                    '**/BuildConfig.*',
//                    '**/*Component*.*',
//                    '**/*BR*.*',
//                    '**/Manifest*.*',
//                    '**/*$Lambda$*.*',
//                    '**/*Companion*.*',
//                    '**/*Module.*', /* filtering Dagger modules classes */
//                    '**/*Dagger*.*',/* filtering Dagger-generated classes */
//                    '**/*MembersInjector*.*',
//                    '**/*_Factory*.*',
//                    '**/*_Provide*Factory*.*',
//                    '**/*Extensions*.*',
//                    '**/*$Result.*', /* filtering `sealed` and `data` classes */
//                    '**/*$Result$*.*',/* filtering `sealed` and `data` classes */
//                    '**/*Args*.*', /* filtering Navigation Component generated classes */
//                    '**/*Directions*.*' /* filtering Navigation Component generated classes */
//            ]
//
//            classDirectories.setFrom(files([
//                    fileTree(dir: "${buildDir}/tmp/kotlin-classes/${variantName}", excludes: fileFilter)
//            ]))
//
//            def coverageSourceDirs = [
//                    "$project.rootDir/app/src/main/java"
//            ]
//            additionalSourceDirs.setFrom(files(coverageSourceDirs))
//            sourceDirectories.setFrom(files(coverageSourceDirs))
//
//            def uiTestsData = fileTree(dir: "${buildDir}/outputs/code_coverage/${variantName}AndroidTest/connected/", includes: ["**/*.ec"])
//
//            executionData(files([
//                    "$project.buildDir/jacoco/${unitTestTask}.exec",
//                    uiTestsData
//            ]))
//        }
//    }
//}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.irfanirawansukirman.starterapp"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            testCoverageEnabled false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }
}

dependencies {
    implementation project(":core")
    implementation project(":features:movie")

    testImplementation "io.mockk:mockk:1.10.5"
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}